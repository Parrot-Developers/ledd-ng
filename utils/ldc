#!/bin/sh

###############################################################################
# @file ldc
#
# Copyright (c) 2016 Parrot S.A.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#   * Neither the name of the Parrot Company nor the
#     names of its contributors may be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE PARROT COMPANY BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
################################################################################

set -eu

MSG_SET_PATTERN=0
MSG_QUIT=1
MSG_DUMP_CONFIG=2
MSG_SET_VALUE=3

conf_file=${LEDD_GLOBAL_CONF:-/etc/ledd/global.conf}

address=$(lua -e "(loadfile\"${conf_file}\" or print)()
		print(address or \"unix:@ledd.socket\")")

usage() {
	cat <<usage_here_document
Command-line client for the ledd daemon
Usage : ldc [options] set_pattern pattern resume
                 resume can be "true" or "false", if true, once the current
                 pattern is finished, the previous one will resume where it was
                 stopped, if false, the previous pattern is discarded
        ldc [options] quit
                 asks the ledd daemon to quit
        ldc [options] dump_config patterns|platform|global
                 dumps (partially) the result of the parsing of one of the 3
                 ledd configuration files, "patterns" will ask to dump
                 the patterns.conf file (usually /etc/ledd/patterns.conf) and so
                 on...
        ldc [options] set_value led_id channel_id value
                 set a led's channel to a given value, regardless of the current
                 led pattern being played, if any, note that this is a debug
                 operation and that patterns and manual values can conflict in
                 unexpected ways
        options:
            -v make the output verbose, i.e., dumps pomp-cli's output
usage_here_document
}

if [ -z "${1+x}" ]
then
	usage
	exit
fi

V=0
if [ "$1" = "-v" ]; then
	V=1
	shift
fi

if [ -z "${1+x}" ]
then
	usage
	exit
fi
command=$1
pomp_cli_cmd="pomp-cli --timeout 2 ${address}"

case "${command}" in
	help|-h|-?|--help)
		usage
		exit 0
		;;
	set_pattern)
		pattern=$2
		resume=$3
		res=$(${pomp_cli_cmd} ${MSG_SET_PATTERN} "%s%s" "$pattern" "$resume" 2>&1)
		;;
	quit)
		res=$(${pomp_cli_cmd} ${MSG_QUIT} "" "" 2>&1)
		;;
	dump_config)
		config=$2
		res=$(${pomp_cli_cmd} ${MSG_DUMP_CONFIG} "%s" "$config" 2>&1)
		;;
	set_value)
		led=$2
		channel=$3
		value=$4
		res=$(${pomp_cli_cmd} ${MSG_SET_VALUE} "%s%s%u" "$led" "$channel" \
				"$value" 2>&1)
		;;
	*)
		usage
		exit 1
		;;
esac

[ "$res" != "POMPCLI: Timeout !" ] || exit 2

if [ "$V" -ge 1 ]; then
	echo "$res"
fi

exit 0
